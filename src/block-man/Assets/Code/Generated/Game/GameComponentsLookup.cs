//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Release = 1;
    public const int SelfDestructTimer = 2;
    public const int View = 3;
    public const int ViewPath = 4;
    public const int ViewPrefab = 5;
    public const int Id = 6;
    public const int SpriteRenderer = 7;
    public const int Transform = 8;
    public const int WorldPosition = 9;
    public const int BulletCube = 10;
    public const int DirectionShot = 11;
    public const int GunCube = 12;
    public const int RotationCube = 13;
    public const int ShotReady = 14;
    public const int SpawnShotTimer = 15;
    public const int SpawnShotTimerInterval = 16;
    public const int AddCube = 17;
    public const int AllCube = 18;
    public const int Block = 19;
    public const int BlockColliding = 20;
    public const int BlockTypeId = 21;
    public const int ChangingLayer = 22;
    public const int Cube = 23;
    public const int SpawnPoint = 24;
    public const int SpawnReady = 25;
    public const int SpawnTimer = 26;
    public const int SpawnTimerInterval = 27;
    public const int Crosshair = 28;
    public const int MaxDistanceShoot = 29;
    public const int Shoot = 30;
    public const int DestructCubes = 31;
    public const int Hero = 32;
    public const int HeroAnimator = 33;
    public const int Jump = 34;
    public const int JumpHeight = 35;
    public const int MaxHeightHero = 36;
    public const int Gravity = 37;
    public const int HorizontalDirection = 38;
    public const int Moving = 39;
    public const int Rigidbody = 40;
    public const int RotationSpeed = 41;
    public const int Speed = 42;
    public const int TurnedAlongDirection = 43;
    public const int VerticalDirection = 44;
    public const int CircleOffsetX = 45;
    public const int CircleOffsetY = 46;
    public const int Ground = 47;
    public const int GroundLayerMask = 48;
    public const int RadiusCastTargets = 49;
    public const int RadiusGroundCheck = 50;
    public const int ReadyToCollectTargets = 51;
    public const int TargetLayerMask = 52;
    public const int Targets = 53;
    public const int TargetsBuffer = 54;
    public const int AccelerationInput = 55;
    public const int AxisInput = 56;
    public const int HammerAttackInput = 57;
    public const int Input = 58;
    public const int JumpInput = 59;
    public const int ShootInput = 60;
    public const int PointsCounter = 61;

    public const int TotalComponents = 62;

    public static readonly string[] componentNames = {
        "Destructed",
        "Release",
        "SelfDestructTimer",
        "View",
        "ViewPath",
        "ViewPrefab",
        "Id",
        "SpriteRenderer",
        "Transform",
        "WorldPosition",
        "BulletCube",
        "DirectionShot",
        "GunCube",
        "RotationCube",
        "ShotReady",
        "SpawnShotTimer",
        "SpawnShotTimerInterval",
        "AddCube",
        "AllCube",
        "Block",
        "BlockColliding",
        "BlockTypeId",
        "ChangingLayer",
        "Cube",
        "SpawnPoint",
        "SpawnReady",
        "SpawnTimer",
        "SpawnTimerInterval",
        "Crosshair",
        "MaxDistanceShoot",
        "Shoot",
        "DestructCubes",
        "Hero",
        "HeroAnimator",
        "Jump",
        "JumpHeight",
        "MaxHeightHero",
        "Gravity",
        "HorizontalDirection",
        "Moving",
        "Rigidbody",
        "RotationSpeed",
        "Speed",
        "TurnedAlongDirection",
        "VerticalDirection",
        "CircleOffsetX",
        "CircleOffsetY",
        "Ground",
        "GroundLayerMask",
        "RadiusCastTargets",
        "RadiusGroundCheck",
        "ReadyToCollectTargets",
        "TargetLayerMask",
        "Targets",
        "TargetsBuffer",
        "AccelerationInput",
        "AxisInput",
        "HammerAttackInput",
        "Input",
        "JumpInput",
        "ShootInput",
        "PointsCounter"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Release),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.Armaments.BulletCube),
        typeof(Code.Gameplay.Features.Armaments.DirectionShot),
        typeof(Code.Gameplay.Features.Armaments.GunCube),
        typeof(Code.Gameplay.Features.Armaments.RotationCube),
        typeof(Code.Gameplay.Features.Armaments.ShotReady),
        typeof(Code.Gameplay.Features.Armaments.SpawnShotTimer),
        typeof(Code.Gameplay.Features.Armaments.SpawnShotTimerInterval),
        typeof(Code.Gameplay.Features.Block.AddCube),
        typeof(Code.Gameplay.Features.Block.AllCube),
        typeof(Code.Gameplay.Features.Block.Block),
        typeof(Code.Gameplay.Features.Block.BlockColliding),
        typeof(Code.Gameplay.Features.Block.BlockTypeIdComponent),
        typeof(Code.Gameplay.Features.Block.ChangingLayer),
        typeof(Code.Gameplay.Features.Block.Cube),
        typeof(Code.Gameplay.Features.Block.SpawnPoint),
        typeof(Code.Gameplay.Features.Block.SpawnReady),
        typeof(Code.Gameplay.Features.Block.SpawnTimer),
        typeof(Code.Gameplay.Features.Block.SpawnTimerInterval),
        typeof(Code.Gameplay.Features.Crosshair.Crosshair),
        typeof(Code.Gameplay.Features.Crosshair.MaxDistanceShoot),
        typeof(Code.Gameplay.Features.Crosshair.Shoot),
        typeof(Code.Gameplay.Features.Hero.HeroComponents.DestructCubes),
        typeof(Code.Gameplay.Features.Hero.HeroComponents.Hero),
        typeof(Code.Gameplay.Features.Hero.HeroComponents.HeroAnimatorComponent),
        typeof(Code.Gameplay.Features.Hero.HeroComponents.Jump),
        typeof(Code.Gameplay.Features.Hero.HeroComponents.JumpHeight),
        typeof(Code.Gameplay.Features.Hero.HeroComponents.MaxHeightHero),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.Gravity),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.HorizontalDirection),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.Moving),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.RigidbodyComponent),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.RotationSpeed),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.Speed),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.TurnedAlongDirection),
        typeof(Code.Gameplay.Features.Movement.MovementComponents.VerticalDirection),
        typeof(Code.Gameplay.Features.TargetCollection.CircleOffsetX),
        typeof(Code.Gameplay.Features.TargetCollection.CircleOffsetY),
        typeof(Code.Gameplay.Features.TargetCollection.Ground),
        typeof(Code.Gameplay.Features.TargetCollection.GroundLayerMask),
        typeof(Code.Gameplay.Features.TargetCollection.RadiusCastTargets),
        typeof(Code.Gameplay.Features.TargetCollection.RadiusGroundCheck),
        typeof(Code.Gameplay.Features.TargetCollection.ReadyToCollectTargets),
        typeof(Code.Gameplay.Features.TargetCollection.TargetLayerMask),
        typeof(Code.Gameplay.Features.TargetCollection.Targets),
        typeof(Code.Gameplay.Features.TargetCollection.TargetsBuffer),
        typeof(Code.Gameplay.Input.AccelerationInput),
        typeof(Code.Gameplay.Input.AxisInput),
        typeof(Code.Gameplay.Input.HammerAttackInput),
        typeof(Code.Gameplay.Input.Input),
        typeof(Code.Gameplay.Input.JumpInput),
        typeof(Code.Gameplay.Input.ShootInput),
        typeof(Code.Gameplay.UI.PointsCounterComponent)
    };
}
